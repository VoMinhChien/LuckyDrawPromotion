// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TT_Share.Models;

namespace TT_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220831100234_bt2")]
    partial class bt2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TT_Share.Models.BarCodes", b =>
                {
                    b.Property<int>("BarCodes_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BarCodes_Active")
                        .HasColumnType("bit");

                    b.Property<string>("BarCodes_BarCodes")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BarCodes_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BarCodes_CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("BarCodes_ExpiredDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("BarCodes_QRCode")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("BarCodes_Scanned")
                        .HasColumnType("Int");

                    b.Property<DateTime>("BarCodes_ScannedDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.HasKey("BarCodes_Id");

                    b.HasIndex("Campaign_Id");

                    b.ToTable("BarCodes");
                });

            modelBuilder.Entity("TT_Share.Models.BarcodeHistory", b =>
                {
                    b.Property<int>("BarcodeHistory_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarcodeHistory_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BarcodeHistory_CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("BarcodeHistory_Owner")
                        .HasColumnType("Int");

                    b.Property<int>("BarcodeHistory_Scanned")
                        .HasColumnType("Int");

                    b.Property<DateTime>("BarcodeHistory_ScannedDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("BarcodeHistory_SpinDate")
                        .HasColumnType("DateTime");

                    b.Property<bool>("BarcodeHistory_UsedForSpin")
                        .HasColumnType("bit");

                    b.Property<int>("Barcode_Id")
                        .HasColumnType("Int");

                    b.HasKey("BarcodeHistory_Id");

                    b.HasIndex("BarcodeHistory_Owner");

                    b.HasIndex("Barcode_Id");

                    b.ToTable("BarcodeHistorys");
                });

            modelBuilder.Entity("TT_Share.Models.Campaign", b =>
                {
                    b.Property<int>("Campaign_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApplyForAll")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoUpdate")
                        .HasColumnType("bit");

                    b.Property<string>("Campaign_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Charset")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CodeCount")
                        .HasColumnType("int");

                    b.Property<int>("CodeLength")
                        .HasColumnType("int");

                    b.Property<int>("CodeUsageLimit")
                        .HasColumnType("int");

                    b.Property<bool>("Compaihn_Type")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DateTime");

                    b.Property<bool>("LimitOneCampaignToOneCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("Postfix")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DateTime");

                    b.Property<bool>("Unlimited")
                        .HasColumnType("bit");

                    b.HasKey("Campaign_Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("TT_Share.Models.Gifts", b =>
                {
                    b.Property<int>("Gifts_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("Gifts_CodeCount")
                        .HasColumnType("int");

                    b.Property<string>("Gifts_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gifts_Product")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Gifts_Id");

                    b.HasIndex("Campaign_Id");

                    b.ToTable("Giftss");
                });

            modelBuilder.Entity("TT_Share.Models.Rules", b =>
                {
                    b.Property<int>("Rule_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Campaign_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Rule_AllDay")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Rule_EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Rule_StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Rules_Amount")
                        .HasColumnType("int");

                    b.Property<int>("Rules_GiftName")
                        .HasColumnType("int");

                    b.Property<string>("Rules_Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Rules_Probability")
                        .HasColumnType("int");

                    b.Property<DateTime>("Rules_RepeatDaily_EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Rules_RepeatDaily_StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Rule_Id");

                    b.HasIndex("Rules_GiftName")
                        .IsUnique();

                    b.ToTable("Ruless");
                });

            modelBuilder.Entity("TT_Share.Models.Users", b =>
                {
                    b.Property<int>("Users_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataOfBirth")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("NumberOfTurns")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeOfBusiness")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("User_Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Password2")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("User_Roles")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Users_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TT_Share.Models.Winner", b =>
                {
                    b.Property<int>("Winners_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Winners_Address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Winners_GiftId")
                        .HasColumnType("int");

                    b.Property<string>("Winners_PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Winners_SentGift")
                        .HasColumnType("bit");

                    b.Property<string>("Winners_UserID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Winners_Windate")
                        .HasColumnType("DateTime");

                    b.HasKey("Winners_Id");

                    b.HasIndex("Winners_GiftId");

                    b.ToTable("Winners");
                });

            modelBuilder.Entity("TT_Share.Models.BarCodes", b =>
                {
                    b.HasOne("TT_Share.Models.Campaign", "Campaign")
                        .WithMany("barCodes")
                        .HasForeignKey("Campaign_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("TT_Share.Models.BarcodeHistory", b =>
                {
                    b.HasOne("TT_Share.Models.Users", "users")
                        .WithMany("BarcodeHistorys")
                        .HasForeignKey("BarcodeHistory_Owner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TT_Share.Models.BarCodes", "BarCodes")
                        .WithMany("BarcodeHistorys")
                        .HasForeignKey("Barcode_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BarCodes");

                    b.Navigation("users");
                });

            modelBuilder.Entity("TT_Share.Models.Gifts", b =>
                {
                    b.HasOne("TT_Share.Models.Campaign", "campaign")
                        .WithMany("Gifts")
                        .HasForeignKey("Campaign_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("campaign");
                });

            modelBuilder.Entity("TT_Share.Models.Rules", b =>
                {
                    b.HasOne("TT_Share.Models.Gifts", "Gifts")
                        .WithOne("Rules")
                        .HasForeignKey("TT_Share.Models.Rules", "Rules_GiftName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("TT_Share.Models.Winner", b =>
                {
                    b.HasOne("TT_Share.Models.Gifts", "gifts")
                        .WithMany("winners")
                        .HasForeignKey("Winners_GiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gifts");
                });

            modelBuilder.Entity("TT_Share.Models.BarCodes", b =>
                {
                    b.Navigation("BarcodeHistorys");
                });

            modelBuilder.Entity("TT_Share.Models.Campaign", b =>
                {
                    b.Navigation("barCodes");

                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("TT_Share.Models.Gifts", b =>
                {
                    b.Navigation("Rules");

                    b.Navigation("winners");
                });

            modelBuilder.Entity("TT_Share.Models.Users", b =>
                {
                    b.Navigation("BarcodeHistorys");
                });
#pragma warning restore 612, 618
        }
    }
}
